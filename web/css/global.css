.align-right {
  text-align: right; }

.align-center {
  text-align: center; }

.Wrapper {
  padding: 20px 40px; }

.displayed {
  display: none; }

.bold {
  color: #909090; }

/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

/* temp */
/* stylelint-disable */
@font-face {
  font-family: Raleway;
  src: url("../fonts/file-name.woff") format("woff"), url("../fonts/file-name.ttf") format("truetype");
  font-style: normal; }

/* stylelint-enable*/
html {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

html,
body {
  height: 100%;
  font-family: Raleway; }

body {
  margin: 0; }

*,
*::before,
*::after {
  outline: none;
  -webkit-box-sizing: inherit;
  box-sizing: inherit; }

hr {
  width: 100px;
  margin-top: 30px; }

.Form_container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 100vh; }

input {
  padding: 10px 20px;
  border: 1px grey solid;
  -webkit-border-radius: 4px;
  border-radius: 4px; }

textarea {
  padding: 10px 20px;
  border: 1px grey solid;
  -webkit-border-radius: 4px;
  border-radius: 4px; }

input:focus, textarea:focus {
  border: 1px #fff solid;
  border-color: #6ea2ff;
  -webkit-transition: all ease 0.2s;
  transition: all ease 0.2s; }

fieldset {
  padding: 45px;
  border: 1px #b3b3b3 solid; }

legend {
  text-align: center;
  padding: 0px 19px;
  font-size: 1.25rem; }

.Form_footer {
  padding: 15px 0 0; }

.Form_button {
  background-color: #6ea2ff;
  border: none;
  color: white;
  -webkit-border-radius: 15px;
  border-radius: 15px;
  font-weight: bold;
  width: 163px;
  padding: 18px;
  cursor: pointer; }

.Form_adherent {
  padding: 40px 10px 115px; }

.Form_inscription {
  width: 615px;
  /* display: inline-block; */
  margin: 0 auto; }
  .Form_inscription input {
    width: 300px; }
  .Form_inscription textarea {
    width: 300px; }
  .Form_inscription .Form_adress {
    width: 100%; }
  .Form_inscription label span {
    margin-left: 10px; }

.Form_inputfile {
  margin-bottom: 5px;
  cursor: pointer; }

.Form_empty {
  color: lightgrey; }

.Form {
  padding: 50px;
  width: 790px;
  margin: 0 auto;
  background-color: #ffffff;
  -webkit-box-shadow: -1px 1px 12px 2px #d6d6d6;
  box-shadow: -1px 1px 12px 2px #d6d6d6; }

.Form_margin {
  padding: 32px 0px; }

.Form_row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 8px; }

.Form_picture {
  display: block;
  margin-bottom: 8px; }

.Form_delete {
  padding: 130px 0px 100px;
  text-align: right; }

.Form_inputs input {
  width: 300px; }

.Form_inputs textarea {
  width: 300px; }

.Form_inputs .Form_adress {
  width: 100%; }

.Form_title {
  text-align: center;
  padding: 0px 0px 50px;
  font-size: 1.4375rem;
  color: #6ea2ff;
  font-weight: bold; }

input[type=date] {
  font-size: 0.8125rem; }

.Form_radio {
  width: 20px !important; }

.Form_inputRadio {
  width: 300px; }
  .Form_inputRadio label {
    margin-right: 30px; }

.Form_radiomargins {
  padding: 4px 20px 7px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center; }

.Form_montant {
  width: 150px !important;
  margin-top: 5px; }

.Form_inputRadio label {
  display: inline; }

.Form_radiocontainer {
  width: 300px;
  padding-left: 15px; }

.Form_label {
  display: block;
  color: #bdbdbd;
  font-weight: bold; }

.alert-danger {
  color: #ff3d3d;
  text-align: center; }

.Navbar {
  font-size: 1.25rem;
  padding: 30px;
  background-color: #6ea2ff;
  height: 80px;
  text-align: right; }

.Navbar a {
  color: white;
  text-decoration: none; }

.Table {
  width: 100%;
  margin-bottom: 40px;
  -webkit-border-radius: 5px;
  border-radius: 5px;
  border-spacing: 0px; }
  .Table td {
    padding: 5px 10px 5px;
    border: 1px #f4f4f4 solid; }
  .Table .Table_name {
    width: 110px; }
  .Table .Table_group {
    width: 50px; }
  .Table .Table_notes {
    width: 300px; }
  .Table .Table_modify {
    text-align: right;
    width: 50px; }
  .Table .Table_avatar {
    width: 130px;
    text-align: center; }

.Table_link {
  text-decoration: none;
  color: #6ea2ff; }

.Table_picture {
  width: 120px; }

.Table_title {
  text-align: center;
  font-size: 1.125rem;
  font-weight: bold; }

.Table_edit {
  text-align: right;
  border-spacing: 0px; }
  .Table_edit input[type=text] {
    width: 400px; }
  .Table_edit input[type=date] {
    width: 400px; }
  .Table_edit input[type=email] {
    width: 400px; }
  .Table_edit td {
    padding: 10px 15px; }
  .Table_edit input {
    color: #4f4f4f; }
  .Table_edit label {
    font-weight: bold; }

.User_picture {
  width: 180px;
  margin: 30px 0px; }

.User_list {
  position: fixed;
  right: 28px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  font-weight: bold;
  font-size: 1.3125rem;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between; }
  .User_list a {
    text-decoration: none;
    color: #6ea2ff;
    margin-bottom: 15px; }

.Edit_back {
  text-decoration: none;
  color: #6ea2ff;
  font-size: 1.25rem;
  position: fixed;
  right: 30px;
  font-weight: bold; }

.Edit_avatar {
  text-align: center; }

.Form_validate {
  width: 100%;
  padding: 16px;
  font-size: 1.25rem;
  font-weight: bold;
  background-color: #6ea2ff;
  border: none;
  color: white;
  -webkit-border-radius: 5px;
  border-radius: 5px;
  cursor: pointer; }

.Form_delete--input {
  color: white;
  font-weight: bold;
  background-color: #ff2323;
  cursor: pointer; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
